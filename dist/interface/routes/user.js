"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userSignupController_1 = require("../controller/user/userSignupController");
const userLoginController_1 = require("../controller/user/userLoginController");
const departmentController_1 = require("../controller/user/departmentController");
const patientAuth_1 = __importDefault(require("../middlewares/patientAuth"));
const doctorManagement_1 = require("../controller/doctor/doctorManagement");
const sloteController_1 = require("../controller/slote/sloteController");
const checkout_1 = require("../controller/user/checkout");
const appointmentController_1 = require("../controller/appointment/appointmentController");
const userProfileController_1 = require("../controller/user/userProfileController");
const departmentController_2 = require("../controller/admin/departmentController");
const priscriptionContrller_1 = require("../controller/prescription/priscriptionContrller");
const userRoute = express_1.default.Router();
//uer auth
userRoute.post('/signup', userSignupController_1.userSignup);
userRoute.post('/login', userLoginController_1.userLogin);
userRoute.post('/login-googleAuth', userLoginController_1.loginWithGoogle_Controller);
userRoute.get('/getalldepartments', patientAuth_1.default, departmentController_1.getAllDepartments);
userRoute.get('/healthProblems', departmentController_1.getHealthProblems_Controller);
userRoute.get('/get-department-by-healt', departmentController_2.getDepartmentByHealthProblem_Controller);
userRoute.get('/get-alldoctor-alldepartment-allhealth', departmentController_1.getAllDoc_Dep_Health_Controller);
userRoute.get('/get-all-doctors-by-heathIsue', departmentController_1.getAllDoctorsByHealthIssue_Controler);
userRoute.get('/all-doctor', doctorManagement_1.getAllDoctorSearchFilterSortController);
userRoute.get('/doctor-info/:id', doctorManagement_1.getOneDoctorController);
userRoute.get('/slots/:id', sloteController_1.getSlotesController);
userRoute.post('/create-checkout-session', patientAuth_1.default, checkout_1.checkoutController);
userRoute.post('/book-slot', patientAuth_1.default, sloteController_1.bookSloteController);
userRoute.get('/appointments', patientAuth_1.default, appointmentController_1.getAppointmentsControllerPatient);
userRoute.get('/profile', patientAuth_1.default, userProfileController_1.getUerPofile);
userRoute.post('/edit-profile', patientAuth_1.default, userProfileController_1.updateUerPofile);
userRoute.put('/edit-appointment-status', patientAuth_1.default, appointmentController_1.updateAppointStatus);
userRoute.put('/review-rating', patientAuth_1.default, departmentController_1.addReviewAndRatingController);
userRoute.put('/cancell-appointment', patientAuth_1.default, appointmentController_1.cancellAppointment);
userRoute.get('/doctors/consulted', patientAuth_1.default, appointmentController_1.consultedDoctors_Controller);
userRoute.get('/prescriptions', patientAuth_1.default, priscriptionContrller_1.getPrescriptionsForPatient_Controller);
exports.default = userRoute;
